https://docs.blockbit.com/pages/viewpage.action?pageId=26815363
1533
['', 'Fragmentação de Pacotes e MTU', '']
['', 'Nesta sessão iremos nos aprofundar em como a fragmentação funciona e abordaremos seus malefícios, detalharemos o MTU e outros recursos relacionados, sua\xa0influência no transporte de pacotes em MPLS, IPSEC, GRE e algumas recomendações para garantir a transmissão correta dos datagramas. Segue todos os tópicos abordados:Fragmentação de pacotes;MTU, Jumbo Frame e MSS;Fragmentação, MTU e Baby Giants em MPLS;Fragmentação em IPSEC e GRE.Iniciaremos detalhando a fragmentação de pacotes.Fragmentação de Pacotes Por convenção, sempre que um host efetua o encaminhamento de um pacote (datagrama) IPv4 através da rede, este não pode ser maior do que o tamanho máximo suportado pela rede em questão. O limite máximo aceitável é estipulado não só pelo link de dados da rede, como também pelo MTU (Maximum transmission unit),\xa0de acordo com o RFC 894, a maioria dos dispositivos ethernet utilizam um valor máximo de 1500 bytes, porém vários fatores podem exercer interferência na transmissão fazendo que estes valores sejam menores, por exemplo, redes ethernet que estejam usando SNAP (Subnetwork Access Protocol), estejam passando pela camada LLC (Logical link control) ou redes PPPoE (Point-to-Point Protocol over Ethernet) possuem um MTU de 1492 bytes,\xa0levando em consideração que o tamanho máximo de um datagrama IPv4 é 65535 bytes, quando o pacote atinge um ponto na rede onde o MTU é inferior ao seu tamanho, é necessário efetuar uma fragmentação de pacotes.Abaixo uma tabela de referência do valor MTU padrão para alguns tipos de rede.Tabela de MTU x ProtocoloRedeMTU (em bytes)WLAN 802.117981Quadros Jumbo Ethernet1501 - 9198Token Ring 802.54464FDDI4352Ethernet1500IEEE 802.3 / 802.21492PPPoE1492A fragmentação de IP é um procedimento cuja função é efetuar a segmentação dos pacotes em partes que obrigatoriamente necessitam ter tamanho igual ou menor aos limites estabelecidos, desta forma possibilitando executar a sua transferência por um link de transmissão que possua um MTU menor do que o pacote original. Este processo permite que os fragmentos sejam encaminhados de forma independente, o que gera um melhor aproveitamento dos recursos da rede, além disso, graças à fragmentação, pacotes muito grandes podem ser transportados sem causar perca no desempenho e também facilitando o transporte para o host de destino, caso não ouvesse fragmentação o pacote simplesmente seria descartado.', 'Para mais informações a respeito do processo de fragmentação, consulte o RFC 791.\xa0', 'Durante o processo de\xa0transferência dos fragmentos ao seu destinatário, o host receptor armazena as partes recebidas em um buffer enquanto aguarda que a transferência seja completada, caso a transmissão demore demais o host de destino pode emitir uma mensagem de timeout e descartar os fragmentos, porém caso a transferência seja efetuada com sucesso, as partes fragmentadas do pacote são recompostas pelo host receptor utilizando como base determinados campos do cabeçalho do protocolo IPv4, no fim deste processo o destinatário tem como resultado o pacote original\xa0reconstituído concluindo a comunicação entre os hosts.', 'Para mais informações sobre o processo de recomposição do pacote, consulte o RFC 815.', 'O processo de fragmentação possui vários aspectos negativos que fazem com que ele seja tido como prejudicial:Caso um único fragmento seja perdido durante a transferência para o host de destino, todos os fragmentos guardados no buffer são descartados, sendo necessária a retransmissão de todos os até que o host possua os fragmentos necessários para conseguir remontar o pacote original com sucesso;A fragmentação de pacotes não envia os fragmentos em uma ordem definida, sendo caracterizada por possibilitar que as partes sejam enviadas de forma independente, isso exige que o host receptor ordene os fragmentos uma vez que eles sejam recebidos;O processo de fragmentação de IPv4 gera uma pequena queda no desempenho de CPU e memória de todos os dispositivos que efetuarem esse processo;O recebimento dos fragmentos pelo host receptor também gera uma queda de desempenho pois exige que ele\xa0designe parte da sua memória para armazenar os fragmentos e depois recriar o pacote original;Existem diversos dispositivos que inspecionam os pacotes durante o transporte, porém graças à fragmentação, apenas o primeiro fragmento do pacote possuirá o cabeçalho do IPv4 o que acaba causando conflitos com esses dispositivos;Etc...A seguir detalharemos mais o MTU e definiremos Jumbo Frames e MSS.MTU, Jumbo Frames e MSS Como denotado pelo nome, a função do\xa0MTU é\xa0definir o tamanho máximo dos blocos de dados a serem manipulados na camada 3 do modelo OSI. Efetivamente o MTU estabelece um limite de tamanho para os pacotes IP a serem enviados\xa0em uma única transação da camada de rede\xa0sem ser necessário reduzir o tamanho do pacote (fragmentação), quanto maior o valor, menor a sobrecarga, porém como MTUs menores acabam aumentando a necessidade de fragmentação, atrasos na rede são consequentemente reduzidos.Caso seja necessário exceder a capacidade de transmissão máxima do MTU (1500 bytes), é possível habilitar Jumbo Frames.\xa0Estes últimos são\xa0uma unidade de dados\xa0com capacidade de transmitir\xa0até\xa09000 bytes no máximo, utilizadas em\xa0links Ethernet, o uso de Jumbo Frames automaticamente faz com que mais dados sejam transferidos utilizando uma quantia menor de pacotes e justamente por reduzir a necessidade de fragmentação há uma melhora no desempenho causando menos sobrecarga de protocolo. Apesar dos pontos positivos, Jumbo Frames\xa0são configurados de forma distinta de acordo com as especificações de cada fabricante, asim sendo é necessário analisar se todos os devices da rede estão de acordo, se em algum ponto o MTU estiver limitado à 1500 bytes, o pacote será descartado ou uma fragmentação ocorrerá, invalidando os benefícios do Jumbo Frame.Outra forma de lidar com aumento no MTU é configurar o MSS\xa0(Maximum Segment Size), trata-se de um parâmetro do cabeçalho TCP cuja finalidade é definir o máximo de dados\xa0que serão transferidos em um único segmento. O MSS define a quantidade máxima de dados que um host está disposto a aceitar em um único pacote IPv4 sem considerar\xa0o cabeçalho do TCP e do IP, ele também é caracterizado por ser negociado durante o processo de handshake e\xa0não pode exceder o limite estabelecido pelo MTU.', 'Para mais informações a respeito do MSS, consulte o\xa0RFC 879 (para IPv4) e o RFC 2460 (para IPv6).', 'A seguir detalharemos a influência do\xa0MPLS no MTU e definiremos Baby Giants.Fragmentação,\xa0MTU e Baby Giants em MPLS Graças às características particulares de como o MPLS funciona, ele acaba impactando na forma como o encaminhamento do tráfego é efetuada: Efetivamente, o MPLS adiciona labels que são utilizadas para criar sua própria tabela de roteamento, tido que cada uma dessas\xa0label equivale a 4 bytes de comprimento, acaba havendo interferência no tamanho dos quadros Ethernet.\xa0Em situações de uso normal, esse aumento não interfere negativamente na transmissão dos pacotes, porém, no uso de túneis VPN IPSEC por exemplo,\xa0o cabeçalho dos pacotes de dados tem seu tamanho aumentado ainda mais.Levando em consideração um cenário onde o pacote IP já esteja utilizando o tamanho máximo possível estabelecido pelo MTU (1500 bytes), porém não seja grande o suficiente para justificar o uso de Jumbo Frames (o pacote possui menos de 1600 bytes), ele é classificado como um Baby Giant. Na grande maioria das vezes, switchs e roteadores ignoram o fato dos pacotes deste tipo terem excedido o limite do MTU e permitem a comunicação normalmente, porém isso depende das especificações de cada appliance da rede.Considerando esse cenário, uma forma de prevenir conflitos é reduzir o MTU do IP, o MTU do próprio MPLS e o tamanho máximo do segmento TCP (MSS) para transferir no máximo 1500, desta forma os pacotes já com as labels adicionadas não irão ultrapassar o limite padrão.Considerando um cenário onde o tamanho dos pacotes é grande o suficiente para não ser considerado um Baby Giant, é recomendável utilizar Jumbo Frames para aumentar o limite para 9000 bytes.', 'Para mais informações a respeito de MPLS, consulte esta página.', 'A seguir detalharemos a fragmentação em túneis GRE e IPSEC.Fragmentação em Túneis GRE e IPSEC De acordo com o RFC 2784, túneis GRE adicionam 20 bytes em um cabeçalho IPv4 e mais 4 bytes em um cabeçalho GRE, além disso, ao encapsular pacotes em outro protocolo, o frame em geral acaba aumentando de tamanho e causando sobrecarga no cabeçalho o que prejudica o transporte por dispositivos que utilizem um MTU padrão, no caso do IPSEC, são adicionados cerca de 80 bytes (cabeçalho ESP e IP) para efetuar o encapsulamento, além disso, os algoritmos de criptografia utilizados nos túneis VPN podem adicionar mais\xa0bytes aos datagramas transportados (na prática de\xa0padding por exemplo) e por fim, outro fator de impacto é se o IPSEC está usando o modo de transporte ou túnel que também podem causar mais fatores de sobrecarga.Graças à todos os pontos previamente citados, é muito provável que haverá fragmentação nos pacotes enviados e consequentemente perca no desempenho do túnel VPN.Considerando esse cenário onde o tamanho dos pacotes está sempre tendendo a ultrapassar os limites do MTU por causa de encapsulamento, criptografia e outros fatores, é recomendável: Ajustar o MTU da interface física onde o IPSEC foi configurado, definir um valor MSS objetivando reduzir o tamanho dos segmentos transportados\xa0e caso seja necessário, considerar\xa0alterar o algoritmo de criptografia do seu túnel.', '']
